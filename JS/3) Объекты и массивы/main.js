// –ó–∞–¥–∞–Ω–∏–µ 1
// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é convertArrToObj, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞ –≤—Ö–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π, –∞ –Ω–∞ –≤—ã—Ö–æ–¥ –æ—Ç–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç, –≥–¥–µ –∫–ª—é—á - —ç—Ç–æ –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ - —Å–∞–º —ç–ª–µ–º–µ–Ω—Ç
// const arr = [1, null, 'test', undefined]
// const obj = convertArrToObj()
// console.log(obj) // { 0: 1, 1: null, 2: 'test', 3: undefined }

function convertArrToObj(arr) {
    const obj = {};
    for (let i = 0; i < arr.length; i++) {
      obj[i] = arr[i];
    }
    return obj;
  }
  
  const arguments = [1, null, 'test', undefined];
  const obj = convertArrToObj(arr);
  console.log(obj);
  
  // –ó–∞–¥–∞–Ω–∏–µ 2
  // –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é countFromArr, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞. –ù–∞ –≤—Ö–æ–¥ –ø–æ—Å—Ç—É–ø–∞–µ—Ç –º–∞—Å—Å–∏–≤, –Ω–∞ –≤—ã—Ö–æ–¥ –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç, –≥–¥–µ –∫–ª—é—á - —ç—Ç–æ —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ - –µ–≥–æ –∫–æ–ª-–≤–æ –≤ –º–∞—Å—Å–∏–≤–µ
  // const arr = [1, 1, 1, 'test', 'test']
  // const res = countFromArr(arr)
  // console.log(res) // { 1: 3, test: 2 }
  
  function countFromArr(arr) {
    const countObj = {};
    for (let i = 0; i < arr.length; i++) {
      const element = arr[i];
      if (countObj[element]) {
        countObj[element] += 1;
      } else {
        countObj[element] = 1;
      }
    }
    return countObj;
  }
  
  const arr = [1, 1, 1, 'test', 'test'];
  const res = countFromArr(arr);
  console.log(res);
  
  // –ó–∞–¥–∞–Ω–∏–µ 3
  // –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é groupByField, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –ø–æ–ª—é —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞. –ù–∞ –≤—Ö–æ–¥ –ø–æ—Å—Ç—É–ø–∞–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –∏ —Å—Ç—Ä–æ–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω—É–∂–Ω–æ–≥–æ –ø–æ–ª—è, –Ω–∞ –≤—ã—Ö–æ–¥ –æ–±—ä–µ–∫—Ç - –≥–¥–µ –∫–ª—é—á–æ–º —è–≤–ª—è–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è –æ–±—ä–µ–∫—Ç–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º - –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –≥–¥–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø–æ–ª–µ —Ä–∞–≤–Ω–æ —ç—Ç–æ–º—É –∫–ª—é—á—É ü§™ (–Ω–∞–¥–µ—é—Å—å –≤ –ø—Ä–∏–º–µ—Ä–µ –±—É–¥–µ—Ç –ø–æ–Ω—è—Ç–Ω–µ–π). –ü—Ä–∏–º–µ—Ä:
  // const arr = [{test: 1},{test: 2},{test: 3},{test: 1},{test: 1}]
  // const res = groupByField(arr, 'test')
  // console.log(res) // { 1: [{test: 1}, {test: 1}, {test: 1}], 2: [{test: 2}], 3: [{test: 3}]}
  
  function groupByField(arr, field) {
    const groupedObj = {};
    for (let i = 0; i < arr.length; i++) {
      const obj = arr[i];
      const value = obj[field];
      if (groupedObj[value]) {
        groupedObj[value].push(obj);
      } else {
        groupedObj[value] = [obj];
      }
    }
    return groupedObj;
  }
  
  const arr = [{test: 1},{test: 2},{test: 3},{test: 1},{test: 1}];
  const res = groupByField(arr, 'test');
  console.log(res);